"use strict";
exports.__esModule = true;
var hash_1 = require("../hash");
describe('Hash utilities', function () {
    test('`getHash` outputs a unique string depending on the content itâ€™s given', function () {
        expect(hash_1.getHash('a', 'b')).toEqual(hash_1.getHash('a', 'b'));
        expect(hash_1.getHash(Buffer.from('a'), 'b')).toEqual(hash_1.getHash('a', 'b'));
        expect(hash_1.getHash('a', 'b', 'c')).not.toEqual(hash_1.getHash('a', 'b'));
        expect(hash_1.getHash('a', 'c')).not.toEqual(hash_1.getHash('a', 'b'));
    });
    test('`getHash` always returns a 32 character string', function () {
        for (var _i = 0, _a = [
            ['foo'],
            ['foo', 'bar', Buffer.from('test')],
            ['--']
        ]; _i < _a.length; _i++) {
            var values = _a[_i];
            var hash = hash_1.getHash.apply(void 0, values);
            expect(hash).toHaveLength(32);
            expect(typeof hash).toBe('string');
        }
    });
});
//# sourceMappingURL=hash.js.map