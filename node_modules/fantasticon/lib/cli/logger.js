"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.getLogger = void 0;
var cli_color_1 = __importDefault(require("cli-color"));
exports.getLogger = function (debug, silent) {
    if (debug === void 0) { debug = false; }
    if (silent === void 0) { silent = false; }
    return ({
        error: function (error) {
            var message = (error instanceof Error && error.message) || error;
            console.log(cli_color_1["default"].red(message));
            debug && error instanceof Error && console.log(error.stack);
        },
        log: function () {
            var values = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                values[_i] = arguments[_i];
            }
            !silent && console.log.apply(console, values);
        },
        start: function (loadedConfigPath) {
            if (loadedConfigPath === void 0) { loadedConfigPath = null; }
            this.log(cli_color_1["default"].yellow("Generating font kit.."));
            if (loadedConfigPath) {
                this.log(cli_color_1["default"].green("\u2714 Using configuration file: " + cli_color_1["default"].green.bold(loadedConfigPath)));
            }
        },
        results: function (_a) {
            var assetsIn = _a.assetsIn, writeResults = _a.writeResults, inputDir = _a.options.inputDir;
            var iconsCount = Object.values(assetsIn).length;
            this.log(cli_color_1["default"].white("\u2714 " + iconsCount + " svg found in " + inputDir));
            for (var _i = 0, writeResults_1 = writeResults; _i < writeResults_1.length; _i++) {
                var writePath = writeResults_1[_i].writePath;
                this.log(cli_color_1["default"].blue("\u2714 Generated", cli_color_1["default"].blueBright(writePath)));
            }
            this.log(cli_color_1["default"].green.bold('Done'));
        }
    });
};
//# sourceMappingURL=logger.js.map